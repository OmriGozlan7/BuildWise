
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ProjectScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  startDate: 'startDate',
  endDatePlanned: 'endDatePlanned',
  endDateActual: 'endDateActual',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UnitScalarFieldEnum = {
  id: 'id',
  projectId: 'projectId',
  unitCode: 'unitCode',
  floor: 'floor',
  rooms: 'rooms',
  areaSqm: 'areaSqm',
  priceList: 'priceList',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BuyerScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  phone: 'phone',
  idNumber: 'idNumber',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BuyerContractScalarFieldEnum = {
  id: 'id',
  buyerId: 'buyerId',
  unitId: 'unitId',
  contractDate: 'contractDate',
  basePrice: 'basePrice',
  cpiBaseMonth: 'cpiBaseMonth',
  paymentTerms: 'paymentTerms',
  status: 'status',
  versionLabel: 'versionLabel',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BuyerPaymentScalarFieldEnum = {
  id: 'id',
  contractId: 'contractId',
  dueDate: 'dueDate',
  paidDate: 'paidDate',
  amountNominal: 'amountNominal',
  cpiFactor: 'cpiFactor',
  amountIndexed: 'amountIndexed',
  method: 'method',
  reference: 'reference',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.ProjectOrderByRelevanceFieldEnum = {
  name: 'name',
  address: 'address',
  notes: 'notes'
};

exports.Prisma.UnitOrderByRelevanceFieldEnum = {
  unitCode: 'unitCode'
};

exports.Prisma.BuyerOrderByRelevanceFieldEnum = {
  name: 'name',
  email: 'email',
  phone: 'phone',
  idNumber: 'idNumber',
  notes: 'notes'
};

exports.Prisma.BuyerContractOrderByRelevanceFieldEnum = {
  paymentTerms: 'paymentTerms',
  versionLabel: 'versionLabel'
};

exports.Prisma.BuyerPaymentOrderByRelevanceFieldEnum = {
  reference: 'reference',
  notes: 'notes'
};
exports.UnitStatus = exports.$Enums.UnitStatus = {
  available: 'available',
  sold: 'sold',
  on_hold: 'on_hold'
};

exports.ContractStatus = exports.$Enums.ContractStatus = {
  active: 'active',
  cancelled: 'cancelled',
  completed: 'completed'
};

exports.PaymentMethod = exports.$Enums.PaymentMethod = {
  bank_transfer: 'bank_transfer',
  cheque: 'cheque',
  cash: 'cash',
  other: 'other'
};

exports.Prisma.ModelName = {
  Project: 'Project',
  Unit: 'Unit',
  Buyer: 'Buyer',
  BuyerContract: 'BuyerContract',
  BuyerPayment: 'BuyerPayment'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\97252\\buildwise-backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\97252\\buildwise-backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ndatasource db {\n  provider          = \"mysql\"\n  url               = env(\"DATABASE_URL\")\n  shadowDatabaseUrl = env(\"SHADOW_DATABASE_URL\")\n}\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\nmodel Project {\n  id             Int       @id @default(autoincrement())\n  name           String\n  address        String?\n  startDate      DateTime?\n  endDatePlanned DateTime?\n  endDateActual  DateTime?\n  notes          String?\n  createdAt      DateTime  @default(now())\n  updatedAt      DateTime  @updatedAt\n  units          Unit[]\n}\n\nmodel Unit {\n  id        Int        @id @default(autoincrement())\n  projectId Int\n  unitCode  String\n  floor     Int?\n  rooms     Decimal?\n  areaSqm   Decimal?\n  priceList Decimal?\n  status    UnitStatus @default(available)\n  createdAt DateTime   @default(now())\n  updatedAt DateTime   @updatedAt\n\n  project   Project         @relation(fields: [projectId], references: [id])\n  contracts BuyerContract[]\n\n  @@unique([projectId, unitCode])\n}\n\nenum UnitStatus {\n  available\n  sold\n  on_hold\n}\n\nmodel Buyer {\n  id        Int             @id @default(autoincrement())\n  name      String\n  email     String?\n  phone     String?\n  idNumber  String?\n  notes     String?\n  createdAt DateTime        @default(now())\n  updatedAt DateTime        @updatedAt\n  contracts BuyerContract[]\n}\n\nmodel BuyerContract {\n  id           Int            @id @default(autoincrement())\n  buyerId      Int\n  unitId       Int\n  contractDate DateTime\n  basePrice    Decimal\n  cpiBaseMonth DateTime // YYYY-MM-01\n  paymentTerms String?\n  status       ContractStatus @default(active)\n  versionLabel String? // v1.0 וכד'\n  createdAt    DateTime       @default(now())\n  updatedAt    DateTime       @updatedAt\n\n  buyer    Buyer          @relation(fields: [buyerId], references: [id])\n  unit     Unit           @relation(fields: [unitId], references: [id])\n  payments BuyerPayment[]\n}\n\nenum ContractStatus {\n  active\n  cancelled\n  completed\n}\n\nmodel BuyerPayment {\n  id            Int           @id @default(autoincrement())\n  contractId    Int\n  dueDate       DateTime\n  paidDate      DateTime?\n  amountNominal Decimal\n  cpiFactor     Decimal       @default(1.0)\n  amountIndexed Decimal\n  method        PaymentMethod @default(bank_transfer)\n  reference     String?\n  notes         String?\n  createdAt     DateTime      @default(now())\n  updatedAt     DateTime      @updatedAt\n\n  contract BuyerContract @relation(fields: [contractId], references: [id])\n\n  @@index([contractId, dueDate])\n  @@index([paidDate])\n}\n\nenum PaymentMethod {\n  bank_transfer\n  cheque\n  cash\n  other\n}\n",
  "inlineSchemaHash": "2afa73e6cb27b2c4259791398a66cb4001fa4b99e47105929b4281fb40309adb",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Project\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDatePlanned\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDateActual\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"units\",\"kind\":\"object\",\"type\":\"Unit\",\"relationName\":\"ProjectToUnit\"}],\"dbName\":null},\"Unit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unitCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"floor\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"rooms\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"areaSqm\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"priceList\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"UnitStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToUnit\"},{\"name\":\"contracts\",\"kind\":\"object\",\"type\":\"BuyerContract\",\"relationName\":\"BuyerContractToUnit\"}],\"dbName\":null},\"Buyer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"idNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"contracts\",\"kind\":\"object\",\"type\":\"BuyerContract\",\"relationName\":\"BuyerToBuyerContract\"}],\"dbName\":null},\"BuyerContract\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"buyerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unitId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"contractDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"basePrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"cpiBaseMonth\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"paymentTerms\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ContractStatus\"},{\"name\":\"versionLabel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"buyer\",\"kind\":\"object\",\"type\":\"Buyer\",\"relationName\":\"BuyerToBuyerContract\"},{\"name\":\"unit\",\"kind\":\"object\",\"type\":\"Unit\",\"relationName\":\"BuyerContractToUnit\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"BuyerPayment\",\"relationName\":\"BuyerContractToBuyerPayment\"}],\"dbName\":null},\"BuyerPayment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"contractId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"paidDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"amountNominal\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"cpiFactor\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"amountIndexed\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"method\",\"kind\":\"enum\",\"type\":\"PaymentMethod\"},{\"name\":\"reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"contract\",\"kind\":\"object\",\"type\":\"BuyerContract\",\"relationName\":\"BuyerContractToBuyerPayment\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

